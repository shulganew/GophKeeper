openapi: "3.0.0"
info:
  version: 1.0.0
  title: Igor's Gokeeper
  description: GophKeeper is asequrity password service (server part)
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /auth/register:
    post:
      summary: User registration
      description: Handler make new user ristration
      security: []
      operationId: CreateUser
      parameters:
      requestBody:
        description: User add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'  
      responses:
        '201':
          description: User created, return OTP secret
          content:
            plain/text:
              schema:
                type: string
                format: string
        '400':
          description: Error creating hash from password
        '401':
          description: user has no otp pass, create new

        '409':
          description: Login is used
        '500':
          description: Can't get UUID or user hash 
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: User login
      description: Handler make existing user auth (login)
      security: []
      operationId: Login
      parameters:
      requestBody:
        description: Login New User
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'  
      responses:
        '200':
          description: Successful login
        '400':
          description: Error decode json
        '401':
          description: Wrong login or password
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/site:
    post:
      summary: Add new site 
      description: Add new site credentials  - site, login and password.
      operationId: AddSite
      parameters:
      requestBody:
        description: Site add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSite'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site adding
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get all users sites data 
      description: list site credentials  - site, login and password.
      operationId: ListSites
      responses:
        '200':
          description: Listed sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        '204':
          description: No content
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: update site data by id
      description: update site data in DB
      operationId: UpdateSite
      parameters:
      requestBody:
        description: Site add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '200':
          description: site updated
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/card:
    post:
      summary: Add new debit card 
      description: Add new card data
      operationId: AddCard
      parameters:
      requestBody:
        description: Card add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCard'
      responses:
        '201':
          description: Card created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '400':
          description: Error decode json
        '401':
          description: Card not authorized
        '500':
          description: Internal error Card adding
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get all users card data 
      description: list card credentials.
      operationId: ListCards
      responses:
        '200':
          description: Listed cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
    put:
      summary: update card data by id
      description: update card data in DB
      operationId: UpdateCard
      parameters:
      requestBody:
        description: Site add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: card updated
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/text:
    post:
      summary: Add new text note
      description: Add new text note
      operationId: AddGtext
      parameters:
      requestBody:
        description: Note add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGtext'
      responses:
        '201':
          description: Gtext created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gtext'
        '400':
          description: Error decode json
        '401':
          description: Gtext not authorized
        '500':
          description: Internal error Card adding
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get all users notes data 
      description: list notes.
      operationId: ListGtexts
      responses:
        '200':
          description: Listed notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gtext'
        '204':
          description: No content
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: update gtext data by id
      description: update gtext data in DB
      operationId: UpdateGtext
      requestBody:
        description: Site add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gtext'
      responses:
        '200':
          description: gtext updated
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/file:
    post:
      summary: Add file to DB
      description: Add file metadata to DB
      operationId: AddGfile
      parameters:
      requestBody:
        description: Note add to the store
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/NewGfile'
      responses:
        '201':
          description: metadata added 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gfile'
        '401':
          description: not authorized
        '500':
          description: Internal error upload file
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get all users files data 
      description: list files.
      operationId: ListGfiles
      responses:
        '200':
          description: Listed files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gfile'
        '204':
          description: No content
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/file/{fileID}:
    get:
      summary: download file from storage by file ID
      description: file id is a secret id in DB, storage id - in minio
      operationId: GetGfile
      parameters:
        - name: fileID
          in: path
          description: ID of file to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: file data
          required: true
          content:
            application/octet-stream:
                schema:
                  type: string
                  format: binary
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: delete from from db and storage by id
      description: file id is a secret id in DB, storage id - in minio
      operationId: DelGfile
      parameters:
        - name: fileID
          in: path
          description: ID of file 
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: file was removed
          required: true
          content:
            application/octet-stream:
                schema:
                  type: string
                  format: binary
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Upload file 
      description: Upload file to s3
      operationId: UploadGfile
      parameters:
        - name: fileID
          in: path
          description: ID of file 
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Note add to the store
        required: true
        content:
          application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '201':
          description: file added to s3
        '401':
          description: not authorized
        '500':
          description: Internal error upload file
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{secretID}:
    delete:
      summary: delet ID
      description: delet id is a secret id in DB for data (Site, Card, Text)
      operationId: DelAny
      parameters:
        - name: secretID
          in: path
          description: ID of return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: user data
        '401':
          description: User not authorized
        '500':
          description: Internal error
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/key:
    put:
      summary: make eKey
      description: admin handler for generatin new ephemeral key
      security:
        - BearerAuth:
            - "admin"
      operationId: EKeyNew
      responses:
        '201':
          description: new key created
        '401':
          description: User not authorized or not admin auth
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/master:
    post:
      summary: change master key from old key to new key
      description: 
      security:
        - BearerAuth:
            - "admin"
      requestBody:
        description: Site add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      operationId: NewMaster
      responses:
        '201':
          description: new master key created
        '401':
          description: User not authorized or not admin auth
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      allOf:
        - $ref: '#/components/schemas/NewUser'
        - required:
            - userID
          properties:
            userID:
              type: string
              format: string
              description: User id
    NewUser:
      required:
        - login
        - password
        - email
        - otp
      properties:
        login:
          type: string
          description: User login from registration
        password:
          type: string
          description: User pass from registartion
        email:
          type: string
          description: Users email
        otp:
          type: string
          description: User's one time pass
    Site:
      allOf:
        - $ref: '#/components/schemas/NewSite'
        - required:
            - siteID
          properties:
            siteID:
              type: string
              format: string
              description: site id (credintial_id)
    NewSite:
      required:
        - definition
        - site
        - slogin
        - spw
      properties:
        definition:
          type: string
          description: Common sectert description
        site:
          type: string
          description: Site URL
        slogin:
          type: string
          description: login for site
        spw:
          type: string
          description: passwor for site
    Card:
      allOf:
        - $ref: '#/components/schemas/NewCard'
        - required:
            - cardID
          properties:
            cardID:
              type: string
              format: string
              description: id card data
    NewCard:
      required:
        - definition
        - ccn
        - exp
        - cvv
        - hld
      properties:
        definition:
          type: string
          description: Common sectert description
        ccn:
          type: string
          description: credit card number
        exp:
          type: string
          description: expire
        cvv:
          type: string
          description: card verification value
        hld:
          type: string
          description: holder
    Gtext:
      allOf:
        - $ref: '#/components/schemas/NewGtext'
        - required:
            - gtextID
          properties:
            gtextID:
              type: string
              format: string
              description: id card data
    NewGtext:
      required:
        - definition
        - note
      properties:
        definition:
          type: string
          format: string
          description: Common sectert header
        note:
          type: string
          format: string
          description: main text data 
    Gfile:
      allOf:
        - $ref: '#/components/schemas/NewGfile'
        - required:
          - gfileID
          properties:
            gfileID:
              type: string
              format: string
              description: file id - secret_id in DB.
    NewGfile:
      required:
        - definition
        - fname
        - size
      properties:
        definition:
          type: string
          format: string
          description: Common sectert header
        fname:
          type: string
          format: string
          description: File name on the user's side
        size:
          type: integer
          format: int64
          description: File size
    Key:
      required:
        - old
        - new
      properties:
        old:
          type: string
          format: string
          description: old master key
        new:
          type: string
          format: string
          description: new master key
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []